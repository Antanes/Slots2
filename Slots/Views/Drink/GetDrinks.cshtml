@using Slots.Models.Domain
@using Slots.Models.ViewModel
@model IEnumerable<Slots.Models.Domain.Drink>


@{
    ViewBag.Title = "DrinkShop";
    Layout = "_Layout";
}

@{
    var cardStyle = "col-sm-4";
    
}

<style>
    .card-buttons-group {
        text-align: right;
        padding: 10px;
    }
</style>




<button type="button" name="onebtn" id="onebtn" class='btn btn-success' onclick="one()">1</button>
<button type="button" name="twobtn" id="twobtn" class='btn btn-success' onclick="two()">2</button>
<button type="button" name="fivebtn" id="fivebtn" class='btn btn-success' onclick="five()">5</button>
<button type="button" name="tenbtn" id="tenbtn" class='btn btn-success' onclick="ten()">10</button>





<style>
    table {
        table-layout: fixed;
    }
</style>

<p></p>
<div class="row">
    <div class="col-md-12">
        <table class="table table-bordered table-hover">
            <tbody>

                <tr>
                    <th>Сумма</th>
                    <td id="Summ">@Machine.Sum</td>
                    <th>Номинал</th>
                    <th>Десять</th>
                    <th>Пять</th>
                    <th>Два</th>
                    <th>Один</th>
                </tr>
                <tr>
                    <th>Сдача</th>
                    <td>@Machine.Change</td>
                    <th>Количество</th>
                    <td>@Machine.Coin10</td>
                    <td>@Machine.Coin5</td>
                    <td>@Machine.Coin2</td>
                    <td>@Machine.Coin1</td>
                </tr>

            </tbody>
        </table>
    </div>
</div>


<div style="padding: 10px;"></div>
@if (Model == null)
{
    <div class="card col-md-12">
        <div class="row g-0">

            <div class="col-md-12">
                <div class="card-body">
                    <h5 class="card-title text-center">Торговый автомат пуст</h5>
                    <h5 class="card-title text-center">Ассортимент пополнится позже</h5>
                </div>
            </div>
        </div>
    </div>

}
else
{
    <div class="row">
        @foreach (var drink in Model)
        {
            <div class="row row-cols-1 @cardStyle text-center">
                <div class="col" style="padding: 50px;">
                    <div class="card">

                        <a asp-controller="Drink" asp-action="BuyDrink" asp-route-id="@drink.Id"> <img onclick="sweet()" src="data:image/jpeg;base64,@Convert.ToBase64String(drink?.Avatar ?? Array.Empty<byte>())" alt="@drink.Name" style="width:150px;height:150px"> </a>


                        <div class="card-body">
                            <h5 class="card-title">Название: @drink.Name</h5>
                            <p class="card-text">Количество: @drink.Quantity</p>
                        </div>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">Стоимость: @drink.Price ₽</li>

                        </ul>
                        <div class="card-body">
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}



<script>
    function one() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById("Summ").innerHTML =
                    this.responseText;
            }
        };
        xhttp.open("GET", "/Drink/PlusOne", true);
        xhttp.send();
    }
</script>

<script>
    function two() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById("Summ").innerHTML =
                    this.responseText;
            }
        };
        xhttp.open("GET", "/Drink/PlusTwo", true);
        xhttp.send();
    }
</script>

<script>
    function five() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById("Summ").innerHTML =
                    this.responseText;
            }
        };
        xhttp.open("GET", "/Drink/PlusFive", true);
        xhttp.send();
    }
</script>

<script>
    function ten() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById("Summ").innerHTML =
                    this.responseText;
            }
        };
        xhttp.open("GET", "/Drink/PlusTen", true);
        xhttp.send();
    }
</script>


<script>
    window.onload = function My() {
        var True = true, False = false;
        if (@Machine.BlockOne) {
            $("#onebtn").attr('disabled', true);
        }
        else {
            $("#onebtn").attr('disabled', false);
        }

        if (@Machine.BlockTwo) {
            $("#twobtn").attr('disabled', true);
        }
        else {
            $("#twobtn").attr('disabled', false);
        }

        if (@Machine.BlockFive) {
            $("#fivebtn").attr('disabled', true);
        }
        else {
            $("#fivebtn").attr('disabled', false);
        }

        if (@Machine.BlockTen) {
            $("#tenbtn").attr('disabled', true);
        }
        else {
            $("#tenbtn").attr('disabled', false);
        }

    }

</script>







